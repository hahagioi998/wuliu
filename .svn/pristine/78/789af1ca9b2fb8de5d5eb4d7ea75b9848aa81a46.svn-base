
package com.chen.crm;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerService", targetNamespace = "http://service.chen.com/")
@XmlSeeAlso({
})
public interface CustomerService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.chen.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findHasAssociation", targetNamespace = "http://service.chen.com/", className = "com.chen.service.FindHasAssociation")
    @ResponseWrapper(localName = "findHasAssociationResponse", targetNamespace = "http://service.chen.com/", className = "com.chen.service.FindHasAssociationResponse")
    public List<Customer> findHasAssociation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<com.chen.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findNotAssociation", targetNamespace = "http://service.chen.com/", className = "com.chen.service.FindNotAssociation")
    @ResponseWrapper(localName = "findNotAssociationResponse", targetNamespace = "http://service.chen.com/", className = "com.chen.service.FindNotAssociationResponse")
    public List<Customer> findNotAssociation();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.chen.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustByPhone", targetNamespace = "http://service.chen.com/", className = "com.chen.service.GetCustByPhone")
    @ResponseWrapper(localName = "getCustByPhoneResponse", targetNamespace = "http://service.chen.com/", className = "com.chen.service.GetCustByPhoneResponse")
    public Customer getCustByPhone(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDecidedzoneIdByAddress", targetNamespace = "http://service.chen.com/", className = "com.chen.service.GetDecidedzoneIdByAddress")
    @ResponseWrapper(localName = "getDecidedzoneIdByAddressResponse", targetNamespace = "http://service.chen.com/", className = "com.chen.service.GetDecidedzoneIdByAddressResponse")
    public String getDecidedzoneIdByAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<com.chen.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.chen.com/", className = "com.chen.service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.chen.com/", className = "com.chen.service.FindAllResponse")
    public List<Customer> findAll();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "customerAssignDecide", targetNamespace = "http://service.chen.com/", className = "com.chen.service.CustomerAssignDecide")
    @ResponseWrapper(localName = "customerAssignDecideResponse", targetNamespace = "http://service.chen.com/", className = "com.chen.service.CustomerAssignDecideResponse")
    public void customerAssignDecide(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Integer> arg1);

}
